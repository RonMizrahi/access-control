
# JWT configuration
security.jwt.secret=change-this-secret-key-to-a-very-long-random-string-at-least-32-characters
security.jwt.expiration-ms=86400000
spring.application.name=accesscontrol
server.address=0.0.0.0
server.port=8080

# Virtual Threads Configuration
# Enable virtual threads for Tomcat (Spring Boot 3.2+)
spring.threads.virtual.enabled=true

# Actuator Configuration
# Expose health, info, and circuitbreakers endpoints
management.endpoints.web.exposure.include=health,info,circuitbreakers
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.circuitbreakers.enabled=true
management.info.env.enabled=true

# Kubernetes Health Probes Configuration
# Liveness probe: checks if the application is running
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Graceful Shutdown Configuration
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# OpenAPI 3 Documentation Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
# API Gateway integration - expose OpenAPI spec at standard location
springdoc.api-docs.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.show-actuator=false

# Distributed Tracing Configuration
# Enable tracing (ObservedAspect is auto-configured)
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
management.zipkin.tracing.endpoint: http://localhost:9411/api/v2/spans

# Circuit Breaker Configuration (Resilience4j)
# External API circuit breaker
resilience4j.circuitbreaker.instances.externalApi.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.externalApi.sliding-window-size=10
resilience4j.circuitbreaker.instances.externalApi.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.externalApi.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.externalApi.permitted-number-of-calls-in-half-open-state=3

# Failing service circuit breaker (for demo)
resilience4j.circuitbreaker.instances.failingService.failure-rate-threshold=100
resilience4j.circuitbreaker.instances.failingService.sliding-window-size=5
resilience4j.circuitbreaker.instances.failingService.minimum-number-of-calls=2
resilience4j.circuitbreaker.instances.failingService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.failingService.permitted-number-of-calls-in-half-open-state=2

# Enable circuit breaker metrics in actuator
management.simple.metrics.export.enabled=true

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true

# Data Initialization Configuration
# Set to true to create a default admin user on application startup
# Default admin credentials: username=admin, password=admin123
# WARNING: Change the default password immediately in production environments
app.init.add-admin=true


# Application Information (appears in /actuator/info) enbaled by management.info.env.enabled Feature flag
info.app.name=Spring Service Template
info.app.description=A Spring Boot 3.5 template with JWT authentication and virtual threads
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Build Information
info.build.timestamp=@maven.build.timestamp@
info.build.artifact=@project.artifactId@
info.build.group=@project.groupId@

# Environment Information
info.environment.profile=${spring.profiles.active:default}
info.environment.virtual-threads=${spring.threads.virtual.enabled}
info.environment.server.port=${server.port}